---
import SmoothScroll from "./react/SmoothScroll"
import TerminalInterface from "./terminal/TerminalInterface"

---

<section id="home" class="min-h-screen flex items-center justify-center">
  <TerminalInterface client:load />
  <SmoothScroll 
    client:load
    scrollSensitivity={15}    
    debounceTime={30}         
    scrollThreshold={40}      
    animationDuration={800}  
  />
</section>
<style is:global>
  .dictionary-entry {
    font-family: 'Crimson Text', Georgia, serif;
    color: var(--color-primary);
    padding: 2rem;
    max-width: 800px;
    width: 100%;
    margin: 0 auto;
    transform: translateZ(0); /* Force hardware acceleration */
    will-change: transform, opacity; /* Optimize for animations */
  }

  .word-section {
    display: flex;
    align-items: baseline;
    gap: 1rem;
    margin-bottom: 0.5rem;
    flex-wrap: wrap;
  }

  .word {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--color-primary);
    letter-spacing: -0.5px;
  }

  .pronunciation {
    font-size: 1.1rem;
    color: var(--color-accent);
    font-family: 'Inter', sans-serif;
  }

  .part-of-speech {
    font-style: italic;
    color: var(--color-accent);
    margin-bottom: 1rem;
  }

  .definitions {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .definition-item {
    display: flex;
    gap: 0.5rem;
  }

  .number {
    color: var(--color-accent);
    flex-shrink: 0;
  }

  .definition {
    font-size: 1.1rem;
    line-height: 1.6;
    margin-bottom: 0.5rem;
    word-wrap: break-word;
  }

  .examples {
    margin-left: 1.5rem;
    margin-top: 1rem;
    color: var(--color-accent);
    font-size: 0.95rem;
    font-style: italic;
  }

  .italic {
    font-style: italic;
  }

  @media (max-width: 768px) {
    .dictionary-entry {
      padding: 1.5rem;
    }

    .word {
      font-size: 2rem;
    }

    .definition {
      font-size: 1rem;
    }
    
    .examples {
      margin-left: 1rem;
    }
  }

  .scroll-indicator {
    position: absolute;
    bottom: 2rem;
    left: 50%;
    transform: translateX(-50%);
    color: var(--color-accent);
    opacity: 0.6;
    cursor: pointer;
    background: none;
    border: none;
    padding: 0;
  }

  .scroll-indicator:hover {
    opacity: 1;
  }

  @keyframes pulse {
    0% {
      opacity: 0.6;
      transform: translateX(-50%) translateY(0);
    }
    50% {
      opacity: 0.3;
      transform: translateX(-50%) translateY(5px);
    }
    100% {
      opacity: 0.6;
      transform: translateX(-50%) translateY(0);
    }
  }

  .scroll-indicator svg {
    animation: pulse 2s infinite;
  }

  /* Terminal Interface Styles */
  .terminal-interface {
    font-family: 'Crimson Text', Georgia, serif;
    color: var(--color-primary);
    padding: 2rem;
    max-width: 900px; /* Reduced from 1150px */
    width: calc(100% - 4rem); /* Account for padding on smaller screens */
    margin: 0 auto;
    position: relative;
    contain: layout style; /* Isolate layout calculations for better performance */
    transform: translateZ(0); /* Force hardware acceleration */
  }
  
  @media (min-width: 1200px) {
    .terminal-interface {
      width: 100%;
    }
  }

  .main-content-area {
    position: relative;
    height: 70vh; /* Take up 70% of viewport height */
    overflow: hidden; /* Hide any content that exceeds the height */
    contain: layout style; /* Isolate animations from affecting parent layout */
    transform: translateZ(0); /* Force GPU acceleration for smoother animations */
    will-change: transform; /* Hint browser about upcoming transforms */
  }

  /* Position definition lower/centered, but responses can use full height */
  .dictionary-entry {
    position: absolute;
    top: 50%; /* Center the definition vertically in the content area */
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
  }

  /* Responses can appear anywhere in the content area */
  .response-content {
    position: absolute;
    top: 0; /* Start responses from the top of the content area */
    left: 0;
    right: 0;
    height: 100%;
    display: flex;
    align-items: flex-start; /* Align responses to top */
    justify-content: center;
    padding-top: 2rem; /* Give some breathing room from very top */
  }

  /* Mobile-specific response positioning */
  @media (max-width: 768px) {
    .response-content {
      padding-top: 0.5rem; /* Much closer to top on mobile */
      height: calc(100% - 1rem); /* Account for reduced padding */
    }
    
    /* For longer responses on mobile, ensure they start at the very top */
    .response-content .response-emergence {
      margin-top: 0; /* Remove default margin on mobile */
      padding-top: 0.5rem; /* Minimal top padding */
    }
  }

  .terminal-input-section {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    margin: 0;
    padding-bottom: 2rem; /* Add some breathing room at bottom */
  }

  /* Terminal Input Container */
  .terminal-input-container {
    background: var(--color-background); /* Same as page background */
    border: none;
    padding: 1rem;
    cursor: text;
    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
    font-size: 0.85rem;
    line-height: 1.4;
    border-radius: 0.25rem;
    transition: all 0.2s ease;
    transform: translateZ(0); /* Force hardware acceleration */
    will-change: transform, opacity; /* Optimize for animations */
    contain: layout style; /* Prevent input changes from affecting parent layout */
  }

  .terminal-content-wrapper {
    display: flex;
    align-items: flex-start; /* Align to top for proper wrapping */
    flex-wrap: wrap;
    width: 100%;
    min-height: inherit; /* Inherit the container's min-height for consistent sizing */
  }

  .terminal-input-container:hover {
    background: var(--color-background); /* Keep same background on hover */
  }

  .terminal-input-container.disabled {
    opacity: 0.6;
    cursor: text; /* Keep normal text cursor instead of not-allowed */
    pointer-events: none; /* Prevent clicking but keep visual appearance */
  }

  /* Terminal Prompt */
  .terminal-prompt {
    color: var(--color-primary);
    font-weight: 500;
    flex-shrink: 0;
  }

  .terminal-path {
    color: var(--color-accent);
  }

  .terminal-directory {
    color: var(--color-primary);
  }

  .terminal-symbol {
    color: var(--color-primary);
    font-weight: 600;
  }

  .terminal-separator {
    color: var(--color-accent);
  }

  /* Terminal Text Content */
  .terminal-text-content {
    color: var(--color-accent);
    margin-left: 0.25rem;
    word-wrap: break-word;
    white-space: normal; /* Allow text to wrap to multiple lines */
    flex: 1; /* Take up remaining space and wrap */
    transform: translateZ(0); /* Force hardware acceleration */
    will-change: contents; /* Optimize for text changes */
  }

  /* Terminal Input Line - for user typing */
  .terminal-input-line {
    display: inline-flex;
    align-items: baseline;
    flex-wrap: wrap;
    transform: translateZ(0); /* Force hardware acceleration */
    will-change: contents; /* Optimize for text changes */
  }

  .terminal-input-text {
    display: inline;
    transform: translateZ(0); /* Force hardware acceleration */
    will-change: contents; /* Optimize for text changes */
  }

  .quote-text {
    opacity: 0.7;
    font-style: italic;
  }

  /* Terminal Cursor */
  .terminal-cursor {
    color: var(--color-primary);
    font-weight: bold;
    margin-left: 0.1rem;
    display: inline-block;
    transform: translateZ(0); /* Force hardware acceleration */
    will-change: opacity; /* Optimize for blinking animation */
  }

  /* Hidden Input */
  .terminal-hidden-input {
    position: absolute;
    left: -9999px;
    opacity: 0;
    width: 1px;
    height: 1px;
  }

  /* Animation Components - with hardware acceleration */
  .swirling-letters {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 10;
    transform: translateZ(0); /* Force hardware acceleration */
    will-change: transform, opacity; /* Optimize for animations */
  }

  .swarm-overlay {
    /* Position relative to the main content area, not the whole screen */
    top: 0;
    left: 0;
    width: 100%;
    height: 400px; /* Match the min-height of main-content-area */
  }

  .swirl-letter {
    position: absolute;
    left: 50%;
    top: 50%;
    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
    font-size: 1.2rem;
    color: var(--color-accent);
    pointer-events: none;
  }

  .response-emergence {
    position: relative;
    max-width: 1000px;
    padding: 2rem;
    margin: 0 auto; /* Remove vertical margins that could cause jumps */
    pointer-events: none;
    transform: translateZ(0); /* Force hardware acceleration */
    will-change: transform, opacity; /* Optimize for animations */
    z-index: 10; /* Put animation above other elements */
    contain: layout style; /* Isolate layout calculations for better performance */
  }

  .response-text {
    font-family: 'Crimson Text', Georgia, serif;
    font-size: 1.2rem;
    line-height: 1.6;
    color: var(--color-primary);
    text-align: left; /* Left align for better readability with longer content */
    transform: translateZ(0); /* Force hardware acceleration */
    will-change: transform, opacity; /* Optimize for animations */
    position: relative; /* Create stacking context */
    z-index: 5; /* Layer above background but below overlays */
  }
  
  /* During animation, lock dimensions to prevent shifts */
  .response-text.animating {
    min-height: inherit; /* Maintain container height */
    contain: layout style; /* Prevent layout recalculation affecting other elements */
  }

  /* Markdown formatting support */
  .response-text h1 {
    font-size: 1.8rem;
    font-weight: 700;
    margin: 1.5rem 0 1rem 0;
    color: var(--color-primary);
    text-align: center;
  }

  .response-text h2 {
    font-size: 1.5rem;
    font-weight: 600;
    margin: 1.25rem 0 0.75rem 0;
    color: var(--color-primary);
    text-align: center;
  }

  .response-text h3 {
    font-size: 1.3rem;
    font-weight: 600;
    margin: 1rem 0 0.5rem 0;
    color: var(--color-primary);
  }

  .response-text .centered {
    text-align: center;
    display: block;
    margin: 0.5rem 0;
  }

  /* Simplified: Just handle normal paragraphs and split content */
  .response-text p {
    margin: 1.5rem 0 !important; /* Standard paragraph spacing */
    display: block !important; /* Keep as block to maintain line structure */
    line-height: inherit !important; /* Use the font's line height */
  }

  .response-text p:first-child {
    margin-top: 0 !important; /* Remove top margin from first paragraph */
  }

  .response-text p:last-child {
    margin-bottom: 0 !important; /* Remove bottom margin from last paragraph */
  }

  /* SplitText line containers - no margin to prevent double spacing */
  .response-text .split-line {
    margin: 0rem !important; /* No spacing for split line divs */
    display: block !important; /* Split lines stay block for proper line structure */
    line-height: inherit !important; /* Use parent line height */
    padding: 0 !important; /* No padding on split lines */
  }
  
  /* Character spans - naturally inline and optimized for animation */
  .response-text span:not(.split-line) {
    display: inline !important; /* Character spans stay inline */
    margin: 0 !important; /* No margins on character spans */
    padding: 0 !important; /* No padding on character spans */
    line-height: inherit !important; /* Inherit line height from parent */
    vertical-align: baseline !important; /* Consistent baseline alignment */
    white-space: inherit !important; /* Inherit whitespace handling */
    font-size: inherit !important; /* Don't let GSAP change font size */
  }

  /* SplitText smartWrap creates word wrapper spans - ensure they don't affect layout */
  .response-text span[style*="white-space: nowrap"] {
    display: inline !important; /* Word wrapper spans also inline */
    margin: 0 !important;
    padding: 0 !important;
    line-height: inherit !important;
  }

  .response-text ul, .response-text ol {
    margin: 0.75rem 0;
    padding-left: 1.5rem;
  }

  .response-text li {
    margin: 0.25rem 0;
    line-height: 1.5;
  }

  .response-text blockquote {
    border-left: 3px solid var(--color-accent);
    padding-left: 1rem;
    margin: 1rem 0;
    font-style: italic;
    color: var(--color-accent);
  }
  
  /* Larger screens get enhanced typography */
  @media (min-width: 1024px) {
    .response-text {
      font-size: 1.3rem;
      line-height: 1.75;
    }
  }

  /* Development indicators */
  .connection-status,
  .message-debouncer-status {
    position: fixed;
    bottom: 1rem;
    right: 1rem;
    background: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 0.5rem;
    border-radius: 0.25rem;
    font-family: monospace;
    font-size: 0.75rem;
    z-index: 1000;
  }

  @media (max-width: 768px) {
    .terminal-interface {
      padding: 1rem; /* Reduced padding for more space */
      width: calc(100% - 1rem); /* Less padding on mobile */
    }

    .main-content-area {
      height: 75vh; /* Slightly more height on mobile */
    }

    .terminal-input-container {
      padding: 0.75rem;
      font-size: 0.85rem;
    }

    .response-text {
      font-size: 1rem; /* Base size - will be overridden by dynamic scaling */
      padding: 0.5rem; /* Less padding to maximize space */
    }

    .response-emergence {
      padding: 1rem; /* Reduced padding on mobile */
      margin: 0 auto; /* Consistent with desktop - no vertical margins */
    }

    .connection-status,
    .message-debouncer-status {
      bottom: 0.5rem;
      right: 0.5rem;
      padding: 0.25rem;
      font-size: 0.7rem;
    }
  }
</style>