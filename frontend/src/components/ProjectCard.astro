---
interface Theme {
  primaryColor: string;
  secondaryColor: string;
  background: string;
  cardBorder: string;
  cardGlow: string;
  font?: string;
}

interface ProjectProps {
  id: string;
  title: string;
  description: string;
  tech: string[];
  liveLink: string;
  githubLink: string;
  image?: string;
}

const { project } = Astro.props;

// Simplified theme configuration
const themes: Record<string, Theme> = {
  spookyspot: {
    primaryColor: "rgb(212, 175, 55)",
    secondaryColor: "rgb(169, 169, 169)",
    background: "#1a1a1a",
    cardBorder: "1px solid rgba(212, 175, 55, 0.3)",
    cardGlow: "0 0 24px 2px rgba(255, 130, 0, .7)",
    font: "'Cormorant Garamond', serif"
  },
  atria: {
    primaryColor: "#e4e4e4",
    secondaryColor: "#d6d6d6",
    background: "linear-gradient(-45deg, #d698db, #563ab1, #8831c7, #d6d6d6)",
    cardBorder: "none",
    cardGlow: "0 8px 24px rgba(215, 131, 255, .7)",
    font: "'M PLUS 2', sans-serif"
  },
  taskflow: {
    primaryColor: "#3a6491",
    secondaryColor: "#405165",
    background: "linear-gradient(135deg, #ffffff 0%, #f0f4f9 100%)",
    cardBorder: "1px solid #dde5f0",
    cardGlow: "0 8px 24px rgba(58, 100, 145, 0.15)",
    font: "'Times New Roman', serif"
  },
  midnightAnalog: {
    primaryColor: "#F59E0B",
    secondaryColor: "#F5F5F5",
    background: "rgba(0, 0, 0, 0.95)",
    cardBorder: "1px solid rgba(245, 158, 11, 0.3)",
    cardGlow: "0 0 24px rgba(245, 158, 11, 0.6)",
    font: "'JetBrains Mono', 'Courier New', monospace"
  }
};

const theme = themes[project.id] || themes.spookyspot;
---

<article 
  class={`project-card ${project.id}-theme`}
  data-theme-id={project.id}
>
  <div class="project-content">
    <h3 class="project-title">{project.title}</h3>
    <p class="project-description">{project.description}</p>
    
    <div class="tech-stack">
      {project.tech.map((tech) => (
        <span class="tech-tag">{tech}</span>
      ))}
    </div>
    
    <div class="project-links">
      <a href={project.liveLink} class="project-link live" target="_blank" rel="noopener noreferrer">
        View Live
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
          <polyline points="15 3 21 3 21 9"></polyline>
          <line x1="10" y1="14" x2="21" y2="3"></line>
        </svg>
      </a>
      <a href={project.githubLink} class="project-link github" target="_blank" rel="noopener noreferrer">
        View Code
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path>
        </svg>
      </a>
    </div>
  </div>
</article>

<style define:vars={theme}>
  .project-card {
    --transition-duration: 0.4s;
    --transition-easing: cubic-bezier(0.4, 0, 0.2, 1);
    
    background: white;
    border-radius: 8px;
    overflow: hidden;
    border: 1px solid var(--color-subtle);
    display: flex;
    flex-direction: column;
    height: 450px;
    
    /* Performance optimizations */
    contain: layout style paint;
    will-change: transform;
    backface-visibility: hidden;
    transform: translateZ(0);
    
    /* Smooth base transition */
    transition: 
      background var(--transition-duration) var(--transition-easing),
      border var(--transition-duration) var(--transition-easing),
      box-shadow var(--transition-duration) var(--transition-easing);
  }

  .project-card:hover {
    background: var(--background);
    border: var(--cardBorder);
    box-shadow: var(--cardGlow);
  }

  .project-content {
    padding: 1.5rem;
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .project-title,
  .project-description {
    transition: 
      color var(--transition-duration) var(--transition-easing),
      font-size 0s,
      font-family 0s;
  }

  .project-title {
    font-size: 1.5rem;
    color: var(--color-primary);
    margin-bottom: 0.5rem;
    font-weight: 600;
  }

  .project-card:hover .project-title {
    color: var(--primaryColor);
    font-family: var(--font, inherit);
  }

  .project-description {
    color: var(--color-text);
    font-size: 0.95rem;
    line-height: 1.6;
    margin-bottom: 1rem;
    flex: 1;
  }

  .project-card:hover .project-description {
    color: var(--secondaryColor);
    font-family: var(--font, inherit);
  }

  .tech-stack {
    display: flex;
    flex-wrap: wrap-reverse;
    gap: 0.5rem;
    margin-bottom: 1.5rem;
  }

  .tech-tag {
    background-color: var(--color-subtle);
    color: var(--color-primary);
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    border: 1px solid var(--color-subtle);
    font-size: 0.8rem;
    transition: all 0.2s ease;
  }

  .project-card:hover .tech-tag {
    background: transparent;
    border-color: var(--primaryColor);
    color: var(--primaryColor);
    opacity: 0.9;
  }

  .project-links {
    display: flex;
    gap: 1rem;
    margin-top: auto;
  }

  .project-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    font-size: 0.9rem;
    transition: transform 0.2s ease;
    text-decoration: none;
  }

  .project-link.live {
    background-color: var(--color-primary);
    border: 1px solid var(--color-subtle);
    color: white;
  }

  .project-link.github {
    background-color: var(--color-subtle);
    border: 1px solid var(--color-subtle);
    color: var(--color-primary);
  }

  .project-card:hover .project-link {
    background: transparent;
    border-color: var(--primaryColor);
    color: var(--primaryColor);
  }

  .project-link:hover {
    transform: translateY(-2px);
  }

  /* Special case for Atria gradient animation */
  .atria-theme:hover {
    background-size: 400% 400%;
    animation: gradientFlow 15s ease infinite;
  }

  /* Optimized gradient animation */
  @keyframes gradientFlow {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }

  /* MidnightAnalog special effects - simplified */
  .midnightAnalog-theme {
    position: relative;
    isolation: isolate;
  }

  .midnightAnalog-theme::before {
    content: '';
    position: absolute;
    inset: 0;
    background-image: radial-gradient(circle, var(--primaryColor) 0.5px, transparent 1px);
    background-size: 4px 4px;
    opacity: 0;
    transition: opacity 0.4s ease;
    pointer-events: none;
    z-index: 1;
  }

  .midnightAnalog-theme:hover::before {
    opacity: 0.08;
  }

  /* Mobile optimizations */
  @media (max-width: 768px) {
    .project-card {
      /* Always show theme on mobile */
      background: var(--background);
      border: var(--cardBorder);
      box-shadow: var(--cardGlow);
    }
    
    .project-title {
      color: var(--primaryColor);
      font-family: var(--font, inherit);
    }
    
    .project-description {
      color: var(--secondaryColor);
      font-family: var(--font, inherit);
    }
    
    .tech-tag {
      background: transparent;
      border-color: var(--primaryColor);
      color: var(--primaryColor);
    }
    
    .project-link {
      background: transparent;
      border-color: var(--primaryColor);
      color: var(--primaryColor);
    }
  }

  /* Reduce motion preference */
  @media (prefers-reduced-motion: reduce) {
    .project-card {
      transition: none;
    }
    
    .atria-theme:hover {
      animation: none;
    }
  }
</style>