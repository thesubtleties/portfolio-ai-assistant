/* styles/global.css */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&display=swap');

:root {
  /* Subtle, sophisticated color palette */
  --color-primary: #2c3e50;
  --color-secondary: #34495e;
  --color-accent: #7f8c8d;
  --color-background: #f8f9fa;
  --color-text: #2c3e50;
  --color-subtle: #ecf0f1;
  --color-hover: #95a5a6;

  /* Spacing variables */
  --spacing-xs: 0.25rem;
  --spacing-sm: 0.5rem;
  --spacing-md: 1rem;
  --spacing-lg: 2rem;
  --spacing-xl: 4rem;
  
  /* Layout constants */
  --navbar-height: 60px; /* Fixed navbar height for calculations */
}

/* Base section height accounting for navbar */
section {
  min-height: calc(100vh - var(--navbar-height));
}

/* Responsive adjustments for laptop screens */
@media (max-height: 900px) {
  /* For laptop screens with limited height */
  section {
    min-height: auto; /* Let content determine height */
    padding-top: 2rem; /* Normal padding - scroll-padding-top handles navbar offset */
  }
  
  /* Remove vertical centering on short screens */
  section.min-h-screen {
    min-height: auto;
  }
  
  section.flex.items-center {
    align-items: flex-start;
  }
  
  /* Reduce vertical padding */
  .py-16 {
    padding-top: 2rem !important;
    padding-bottom: 2rem !important;
  }
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
  font-size: 16px;
  scroll-padding-top: var(--navbar-height); /* Account for fixed navbar when scrolling */
}

body {
  font-family: 'Inter', sans-serif;
  background-color: var(--color-background);
  color: var(--color-text);
  line-height: 1.6;
}

/* Subtle animations */
.fade-in {
  opacity: 0;
  transform: translateY(20px);
  animation: fadeIn 0.6s ease-out forwards;
}

@keyframes fadeIn {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Fix for GSAP SplitText character spans being overridden by prose/other CSS */
.response-text span {
  display: inline-block !important;
  position: relative !important;
}

/* More specific rule for prose spans */
.response-text.prose span {
  display: inline-block !important;
  position: relative !important;
}

/* Even more specific rule */
.response-text.prose.max-w-none span {
  display: inline-block !important;
  position: relative !important;
}

/* Fix for CrumblingText SplitText spans */
.dictionary-entry span {
  display: inline-block !important;
  position: relative !important;
}

